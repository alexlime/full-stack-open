services:
  redis:
    image: redis:latest
    ports:
      - 3002:6379
    command: ['redis-server', '--appendonly', 'yes', '--dir', '/data'] # This command runs in a contianer when it starts. Use AOF persistence (Without this line Redis will start with its default configuration )
    volumes:
      - ./todo-backend/redis_data:/data

  mongo:
    image: mongo
    ports:
      - 3003:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
          - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
          - ./todo-backend/mongo_data:/data/db

  todo-backend:
    image: todo-back-dev
    container_name: todo-back-dev
    build:
      context: .
      dockerfile: ./todo-backend/dev.Dockerfile
    ports:
      - 3210:3210
    volumes:
      - ./todo-backend:/usr/src/app
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
      - PORT=3210
    depends_on:
      - mongo
      - redis


  todo-frontend:
    image: todo-front-prod
    container_name: todo-front-prod
    build:
      context: ./todo-frontend
      dockerfile: Dockerfile
    # environment:
      # - REACT_APP_BACKEND_URL=http://localhost:8080/api/
    volumes:
      - ./todo-frontend:/usr/src/app
    # ports:
    #   - "80:80"

  nginx:
    image: nginx:1.20-alpine
    container_name: reverse-proxy
    ports:
      - 8080:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - todo-frontend
      - todo-backend